- sensor:
    # Energy flow sensoren
    - name: "Zonnestroom Direct Verbruikt Vandaag"
      unique_id: zonnestroom_direct_verbruikt_vandaag
      unit_of_measurement: "kWh"
      state_class: total
      device_class: energy
      state: >
        {% set uit_zon = states('sensor.huisverbruik_van_zon')|float(0) %}
        {% set uren = now().hour + now().minute / 60 %}
        {% if uren > 0 %}
          {{ (uit_zon * uren / 1000)|round(2) }}
        {% else %}
          0
        {% endif %}
      
    - name: "Zonnestroom Naar Batterij Vandaag"
      unique_id: zonnestroom_naar_batterij_vandaag
      unit_of_measurement: "kWh"
      state_class: total
      device_class: energy
      state: >
        {{ states('sensor.thuisbatterij_today')|float(0)|round(2) }}
      
    - name: "Teruglevering Vandaag"
      unique_id: teruglevering_vandaag
      unit_of_measurement: "kWh"
      state_class: total
      device_class: energy
      state: >
        {{ states('sensor.zonneplan_electricity_returned_today')|float(0)|round(2) }}
      
    - name: "Batterij Naar Huis Vandaag"
      unique_id: batterij_naar_huis_vandaag
      unit_of_measurement: "kWh"
      state_class: total
      device_class: energy
      state: >
        {{ states('sensor.thuisbatterij_delivery_today')|float(0)|round(2) }}
      
    - name: "Netstroom Verbruikt Vandaag"
      unique_id: netstroom_verbruikt_vandaag
      unit_of_measurement: "kWh"
      state_class: total
      device_class: energy
      state: >
        {{ states('sensor.zonneplan_electricity_consumption_today')|float(0)|round(2) }}

    # Zelfvoorziening percentage
    - name: "Percentage Zelfvoorziening Elektriciteit"
      unique_id: percentage_zelfvoorziening_elektriciteit
      unit_of_measurement: "%"
      state_class: measurement
      icon: mdi:solar-power
      state: >
        {% set totaal_verbruik = states('sensor.zonneplan_electricity_consumption_today')|float(0) + 
                               states('sensor.dagelijks_zon_verbruik_correct')|float(0) + 
                               states('sensor.thuisbatterij_delivery_today')|float(0) %}
        {% set zelf_opgewekt = states('sensor.dagelijks_zon_verbruik_correct')|float(0) + 
                             states('sensor.thuisbatterij_delivery_today')|float(0) %}
        {% if totaal_verbruik > 0 %}
          {{ (zelf_opgewekt / totaal_verbruik * 100)|round(1) }}
        {% else %}
          0
        {% endif %}

    # Utility sensoren
    - name: "Gas Verbruik Vandaag"
      unique_id: gas_verbruik_vandaag
      unit_of_measurement: "m³"
      state_class: total
      device_class: gas
      state: >
        {{ states('sensor.zonneplan_gas_consumption_today')|float(0)|round(2) }}
        
    - name: "Water verbruik vandaag"
      unique_id: water_verbruik_vandaag
      device_class: water
      unit_of_measurement: "m³"
      state_class: total
      icon: mdi:water
      state: >
        {% if states('sensor.water_dagelijks') != 'unknown' and states('sensor.water_dagelijks') != 'unavailable' %}
          {{ states('sensor.water_dagelijks')|float(0)|round(2) }}
        {% else %}
          0
        {% endif %}
        
        # Kosten sensoren
    - name: "Gas Verbruik Kosten Vandaag" 
      unique_id: gas_verbruik_kosten_vandaag
      unit_of_measurement: "EUR"
      state_class: total
      device_class: monetary
      icon: mdi:cash
      state: >
        {% set verbruik = states('sensor.gas_verbruik_vandaag')|float(0) %}
        {# Pas dit aan naar de werkelijke gasprijs #}
        {% set gas_prijs = 0.85 %}  
        {{ (verbruik * gas_prijs) | round(2) }}
    
    - name: "Water Verbruik Kosten Vandaag"
      unique_id: water_verbruik_kosten_vandaag
      unit_of_measurement: "EUR"
      state_class: total
      device_class: monetary
      icon: mdi:cash
      state: >
        {% set verbruik = states('sensor.water_verbruik_vandaag')|float(0) %}
        {# Pas dit aan naar de werkelijke waterprijs #}
        {% set water_prijs = 1.20 %}  
        {{ (verbruik * water_prijs) | round(2) }}
          # Voeg dit toe aan je dashboard_sensors.yaml

    - name: "Water verbruik vandaag direct"
      unique_id: water_verbruik_vandaag_direct
      device_class: water
      unit_of_measurement: "m³"
      state_class: total
      icon: mdi:water
      state: >
        {% set current = states('sensor.watermeter_totaal_water_verbruik')|float(0) %}
        {% set previous = states.sensor.watermeter_totaal_water_verbruik.last_changed.replace(hour=0, minute=0, second=0).timestamp() %}
        {% set start_of_day = now().replace(hour=0, minute=0, second=0).timestamp() %}
        {% if previous < start_of_day %}
          {% set start_value = state_attr('sensor.watermeter_totaal_water_verbruik', 'last_reset_value')|float(0) %}
          {{ (current - start_value)|round(2) if current > start_value else 0 }}
        {% else %}
          0
        {% endif %}
        
        