- sensor:
    # Sensors - Batterijstatistieken
    - name: "Batterij EfficiÃ«ntie Percentage"
      unit_of_measurement: "%"
      state_class: measurement
      state: >
        {% set laden = states('sensor.thuisbatterij_today')|float(0.1) %}
        {% set ontladen = states('sensor.thuisbatterij_delivery_today')|float(0) %}
        {% if laden > 0 %}
          {{ ((ontladen / laden) * 100) | round(1) }}
        {% else %}
          0
        {% endif %}
    
    # Sensors - Verbeterde batterijvermogensberekeningen
    - name: "Batterij Laadvermogen"
      unit_of_measurement: "W"
      state_class: measurement
      device_class: power
      state: >
        {% set power = states('sensor.thuisbatterij_power')|float(0) %}
        {% if power < 0 %}
          {{ (power * -1) | round(0) }}
        {% else %}
          0
        {% endif %}
        
    - name: "Batterij Ontlading Vermogen"
      unit_of_measurement: "W"
      state_class: measurement
      device_class: power
      state: >
        {% set power = states('sensor.thuisbatterij_power')|float(0) %}
        {% if power > 0 %}
          {{ power | round(0) }}
        {% else %}
          0
        {% endif %}
        
    # Batterij rendement in euro's
    - name: "Batterij Rendement Euro"
      unit_of_measurement: "EUR"
      state_class: total
      device_class: monetary
      icon: mdi:cash-plus
      state: >
        {% set ontladen = states('sensor.thuisbatterij_delivery_today') | float(0) %}
        {% set prices = state_attr('sensor.zonneplan_current_electricity_tariff', 'prices_today') %}
        {% if prices %}
          {% set gemiddelde_prijs = prices | sum / prices | length %}
          {{ (ontladen * gemiddelde_prijs) | round(2) }}
        {% else %}
          {% set prijs_per_kwh = states('input_number.energieprijs_elektriciteit') | float(0.22) %}
          {{ (ontladen * prijs_per_kwh) | round(2) }}
        {% endif %}
        
    # Thuisbatterij Laadschema
    - name: "Thuisbatterij Laadschema"
      icon: mdi:calendar-clock
      state: >
        {% if is_state('automation.batterij_dynamisch_laden', 'on') %}
          Actief
        {% else %}
          Inactief
        {% endif %}
      attributes:
        laadschema: >
          {% set prices = state_attr('sensor.zonneplan_current_electricity_tariff', 'prices_today') %}
          {% set hours = state_attr('sensor.zonneplan_current_electricity_tariff', 'hours_priced_today') %}
          {% set current_hour = now().hour %}
          {% set threshold = states('input_number.low_price_threshold')|float(0.15) %}
          {% set min_soc = states('input_number.battery_min_soc')|float(20) %}
          {% set current_soc = states('sensor.thuisbatterij_soc')|float(0) %}
          
          {% if prices and hours %}
            {% set schedule = [] %}
            {% for i in range(prices|length) %}
              {% set hour_obj = as_datetime(hours[i]) %}
              {% set hour = hour_obj.hour %}
              {% if hour >= current_hour %}
                {% set price = prices[i] %}
                {% set status = 'Laden' if price <= threshold and current_soc < min_soc else 'Normaal' %}
                {% set schedule = schedule + [{
                  'hour': hour,
                  'price': price|round(3),
                  'status': status
                }] %}
              {% endif %}
            {% endfor %}
            
            {{ schedule }}
          {% else %}
            []
          {% endif %}